const express = require('express');
const cors = require('cors');
const nodemailer = require('nodemailer');
const path = require('path');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(express.json());
// ÌîÑÎ°†Ìä∏ÏóîÎìúÎäî VercelÏóêÏÑú Î≥ÑÎèÑ Î∞∞Ìè¨Îê® - Ï†ïÏ†Å ÌååÏùº ÏÑúÎπô Î∂àÌïÑÏöî
// app.use(express.static('dist'));

// Ïù¥Î©îÏùº transporter Ï¥àÍ∏∞Ìôî
let transporter = null;

const initializeTransporter = async () => {
  if (process.env.GMAIL_APP_PASSWORD) {
    // Gmail ÏÑ§Ï†ïÏù¥ ÏûàÎäî Í≤ΩÏö∞ (Ïö∞ÏÑ†ÏàúÏúÑ)
    console.log('üîê Gmail Í≥ÑÏ†ïÏúºÎ°ú Ïù¥Î©îÏùº ÏÑúÎπÑÏä§ Ï¥àÍ∏∞Ìôî');
    try {
      const transporter = nodemailer.createTransport({
        host: 'smtp.gmail.com',
        port: 587,
        secure: false, // true for 465, false for other ports
        auth: {
          user: process.env.GMAIL_USER || 'teampylot@gmail.com',
          pass: process.env.GMAIL_APP_PASSWORD
        },
        tls: {
          rejectUnauthorized: false
        }
      });
      
      // Ïó∞Í≤∞ ÌÖåÏä§Ìä∏
      await transporter.verify();
      console.log('‚úÖ Gmail SMTP Ïó∞Í≤∞ ÌôïÏù∏ ÏôÑÎ£å');
      return transporter;
    } catch (error) {
      console.error('‚ùå Gmail Ïù∏Ï¶ù Ïã§Ìå®:', error.message);
      console.log('üîÑ ÌÖåÏä§Ìä∏ Í≥ÑÏ†ïÏúºÎ°ú Ï†ÑÌôòÌï©ÎãàÎã§...');
      // Gmail Ïã§Ìå® Ïãú ÌÖåÏä§Ìä∏ Í≥ÑÏ†ïÏúºÎ°ú fallback
    }
  }
  
  // Gmail ÏÑ§Ï†ïÏù¥ ÏóÜÍ±∞ÎÇò Ïã§Ìå®Ìïú Í≤ΩÏö∞ ÌÖåÏä§Ìä∏ Í≥ÑÏ†ï ÏÇ¨Ïö©
    try {
      const testAccount = await nodemailer.createTestAccount();
      console.log('üß™ ÌÖåÏä§Ìä∏ Ïù¥Î©îÏùº Í≥ÑÏ†ï ÏÉùÏÑ±:', testAccount.user);
      console.log('üîó ÌÖåÏä§Ìä∏ Ïù¥Î©îÏùº ÌôïÏù∏: https://ethereal.email/login');
      console.log('   - ÏÇ¨Ïö©ÏûêÎ™Ö:', testAccount.user);
      console.log('   - ÎπÑÎ∞ÄÎ≤àÌò∏:', testAccount.pass);
      
      return nodemailer.createTransport({
        host: 'smtp.ethereal.email',
        port: 587,
        secure: false,
        auth: {
          user: testAccount.user,
          pass: testAccount.pass
        }
      });
    } catch (error) {
      console.error('‚ùå ÌÖåÏä§Ìä∏ Í≥ÑÏ†ï ÏÉùÏÑ± Ïã§Ìå®:', error);
      // ÌÖåÏä§Ìä∏ Í≥ÑÏ†ï ÏÉùÏÑ± Ïã§Ìå®Ïãú ÎçîÎØ∏ transporter ÏÇ¨Ïö©
      console.log('‚ö†Ô∏è  ÎçîÎØ∏ Î™®ÎìúÎ°ú Ï†ÑÌôòÌï©ÎãàÎã§.');
      return {
        sendMail: async (options) => {
          console.log('üìß ÎçîÎØ∏ Ïù¥Î©îÏùº Î∞úÏÜ°:', {
            to: options.to,
            subject: options.subject,
            preview: options.html.substring(0, 100) + '...'
          });
          return { messageId: 'dummy-' + Date.now() };
        }
      };
    }
};

// Ïù¥Î©îÏùº ÌÖúÌîåÎ¶ø Ìï®Ïàò
const createWelcomeEmail = (userData) => {
  const { email, gender, age, occupation } = userData;
  
  const genderText = gender === 'male' ? 'ÎÇ®ÏÑ±' : gender === 'female' ? 'Ïó¨ÏÑ±' : '';
  const occupationLabels = {
    student: 'ÌïôÏÉù',
    office_worker: 'ÏÇ¨Î¨¥ÏßÅ',
    service: 'ÏÑúÎπÑÏä§ÏóÖ',
    manufacturing: 'Ï†úÏ°∞ÏóÖ',
    education: 'ÍµêÏú°',
    healthcare: 'ÏùòÎ£å/Î≥¥Í±¥',
    it: 'IT/Í∏∞Ïà†',
    finance: 'Í∏àÏúµ',
    marketing: 'ÎßàÏºÄÌåÖ/Í¥ëÍ≥†',
    freelancer: 'ÌîÑÎ¶¨ÎûúÏÑú',
    housewife: 'Ï£ºÎ∂Ä',
    other: 'Í∏∞ÌÉÄ'
  };
  
      return {
      subject: 'Pylot ÌååÏùºÎüø Îì±Î°ùÏùÑ Ï∂ïÌïòÌï©ÎãàÎã§!',
      html: `
        <!DOCTYPE html>
        <html lang="ko">
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
          <meta name="format-detection" content="telephone=no">
          <meta name="x-apple-disable-message-reformatting">
          <title>Pylot ÌååÏùºÎüø ÌôòÏòÅ</title>
          <style>
            @import url('https://cdn.jsdelivr.net/gh/orioncactus/pretendard@v1.3.8/dist/web/static/pretendard.css');
            * { 
              margin: 0; 
              padding: 0; 
              box-sizing: border-box; 
            }
            body { 
              font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, system-ui, sans-serif;
              line-height: 1.6; 
              color: white;
              background: #000000;
              -webkit-font-smoothing: antialiased;
              -moz-osx-font-smoothing: grayscale;
              margin: 0;
              padding: 0;
              width: 100% !important;
              min-width: 100%;
              height: 100% !important;
              -webkit-text-size-adjust: 100%;
              -ms-text-size-adjust: 100%;
            }
            .container { 
              max-width: 600px; 
              margin: 0 auto; 
              background: #000000;
              border-radius: 0;
              width: 100% !important;
              min-height: 100vh;
            }
            table {
              border-spacing: 0;
              border-collapse: collapse;
              width: 100% !important;
            }
            .banner-img {
              width: 100%;
              height: auto;
              display: block;
              max-height: 200px;
              object-fit: cover;
            }
            .banner::after {
              content: '';
              position: absolute;
              bottom: 0;
              left: 0;
              right: 0;
              height: 60px;
              background: linear-gradient(transparent, #000000);
            }
            .content { 
              padding: 40px 30px;
              background: #000000;
            }
            .title { 
              font-size: 32px; 
              font-weight: 700; 
              color: white;
              margin-bottom: 16px;
              letter-spacing: -0.02em;
            }
            .subtitle { 
              font-size: 18px; 
              color: rgba(255, 255, 255, 0.7);
              margin-bottom: 40px;
              font-weight: 400;
            }
            .section { 
              margin-bottom: 40px;
            }
            .section-title { 
              font-size: 20px; 
              font-weight: 600;
              color: white;
              margin-bottom: 16px;
              letter-spacing: -0.01em;
            }
            .section-content { 
              font-size: 16px; 
              color: rgba(255, 255, 255, 0.8);
              line-height: 1.7;
              text-align: left;
            }
            .reward-box { 
              background: rgba(255, 255, 255, 0.05);
              border: 1px solid rgba(255, 255, 255, 0.1);
              border-radius: 12px;
              padding: 24px;
              margin: 24px 0;
              backdrop-filter: blur(10px);
            }
            .reward-amount {
              font-size: 24px;
              font-weight: 700;
              color: white;
              margin-bottom: 8px;
            }
            .reward-desc {
              font-size: 16px;
              color: rgba(255, 255, 255, 0.7);
              line-height: 1.5;
              text-align: left;
            }
            .user-info {
              background: rgba(255, 255, 255, 0.05);
              border: 1px solid rgba(255, 255, 255, 0.1);
              border-radius: 16px;
              padding: 32px;
              margin: 32px 0;
              backdrop-filter: blur(10px);
            }
            .user-info-item {
              display: flex;
              justify-content: space-between;
              align-items: center;
              padding: 16px 0;
              border-bottom: 1px solid rgba(255, 255, 255, 0.1);
              font-size: 16px;
              min-height: 56px;
            }
            .user-info-item:last-child {
              border-bottom: none;
              padding-bottom: 0;
            }
            .user-info-item:first-child {
              padding-top: 0;
            }
            .user-info-label {
              color: rgba(255, 255, 255, 0.8);
              font-weight: 500;
              font-size: 15px;
              min-width: 80px;
              letter-spacing: -0.01em;
            }
            .user-info-value {
              color: white;
              font-weight: 600;
              font-size: 16px;
              text-align: right;
              flex: 1;
              margin-left: 24px;
            }
            .process-list {
              list-style: none;
              padding: 0;
            }
            .process-item {
              display: flex;
              align-items: flex-start;
              margin-bottom: 24px;
              padding: 0;
              width: 100%;
              box-sizing: border-box;
            }
            .process-number {
              width: 32px;
              height: 32px;
              background: white;
              color: #000000;
              border-radius: 50%;
              font-size: 14px;
              font-weight: 700;
              margin-right: 16px;
              flex-shrink: 0;
              line-height: 32px;
              text-align: center;
              display: inline-block;
              vertical-align: top;
            }
            .process-content {
              flex: 1;
              min-width: 0;
              word-wrap: break-word;
              overflow-wrap: break-word;
            }
            .process-title {
              font-size: 16px;
              font-weight: 600;
              color: white;
              margin-bottom: 6px;
              line-height: 1.4;
              text-align: left;
            }
            .process-desc {
              font-size: 14px;
              color: rgba(255, 255, 255, 0.7);
              line-height: 1.6;
              text-align: left;
              margin: 0;
              padding: 0;
            }
                              .cta-section {
                    text-align: center;
                    margin: 50px 0 20px 0;
                    padding: 40px 0 20px 0;
                    border-top: 1px solid rgba(255, 255, 255, 0.1);
                  }
            .cta-text {
              font-size: 16px;
              color: rgba(255, 255, 255, 0.7);
              margin-bottom: 24px;
              line-height: 1.6;
            }
            .cta-button {
              display: inline-block;
              background: white;
              color: #000000 !important;
              padding: 16px 32px;
              text-decoration: none !important;
              border-radius: 8px;
              font-weight: 600;
              font-size: 16px;
              transition: all 0.2s ease;
            }
            .cta-button:visited {
              color: #000000 !important;
            }
            .cta-button:hover {
              color: #000000 !important;
              background: rgba(255, 255, 255, 0.9);
            }
            .footer {
              text-align: center;
              padding: 30px;
              border-top: 1px solid rgba(255, 255, 255, 0.1);
              background: #000000;
            }
            .footer p {
              font-size: 13px;
              color: rgba(255, 255, 255, 0.5);
              margin: 4px 0;
            }
                              .footer a {
                    color: rgba(255, 255, 255, 0.7);
                    text-decoration: none;
                  }
                  .user-info-simple {
                    background: rgba(255, 255, 255, 0.05);
                    border: 1px solid rgba(255, 255, 255, 0.1);
                    border-radius: 12px;
                    padding: 20px 24px;
                    margin: 32px 0;
                    backdrop-filter: blur(10px);
                    font-size: 16px;
                    color: white;
                    text-align: center;
                    font-weight: 500;
                    letter-spacing: -0.01em;
                  }
                  .section-header {
                    display: flex;
                    align-items: center;
                    gap: 12px;
                    margin-bottom: 0;
                  }
                  .section-header .section-title {
                    margin-bottom: 0;
                  }
                  .info-badge {
                    background: rgba(255, 255, 255, 0.1);
                    border: 1px solid rgba(255, 255, 255, 0.2);
                    border-radius: 6px;
                    padding: 4px 8px;
                    font-size: 12px;
                    color: rgba(255, 255, 255, 0.8);
                    font-weight: 500;
                    letter-spacing: 0.02em;
                    text-transform: lowercase;
                    backdrop-filter: blur(5px);
                  }
            @media (max-width: 600px) {
              .content { 
                padding: 24px 16px; 
                width: 100% !important;
                box-sizing: border-box;
              }
              .title { 
                font-size: 24px; 
                line-height: 1.3;
                margin-bottom: 12px;
              }
              .subtitle { 
                font-size: 16px; 
                line-height: 1.5;
                margin-bottom: 32px;
              }
              .banner { height: 160px; }
              .user-info {
                padding: 24px 16px;
                margin: 24px 0;
              }
              .process-item {
                margin-bottom: 20px;
                padding-right: 8px;
              }
              .process-number {
                width: 28px;
                height: 28px;
                line-height: 28px;
                font-size: 13px;
                margin-right: 12px;
              }
              .process-title {
                font-size: 15px;
                margin-bottom: 4px;
              }
              .process-desc {
                font-size: 13px;
                line-height: 1.5;
              }
              .reward-box {
                padding: 20px 16px;
                margin: 20px 0;
              }
              .reward-amount {
                font-size: 20px;
              }
              .cta-section {
                padding: 32px 0;
                margin: 40px 0;
              }
            }
          </style>
        </head>
        <body>
          <table role="presentation" cellspacing="0" cellpadding="0" border="0" width="100%">
            <tr>
              <td align="center" style="padding: 0;">
                <div class="container">
                  <img src="cid:pylotBanner" class="banner-img" alt="Pylot Banner" />
            
            <div class="content">
              <h1 class="title">ÌååÏùºÎüø Îì±Î°ùÏùÑ Ï∂ïÌïòÌï©ÎãàÎã§</h1>
              <p class="subtitle">Îç∞Ïù¥ÌÑ∞ Í∏∞Î∞ò Ï†úÌíà ÌÖåÏä§Ìä∏Ïùò ÏÉàÎ°úÏö¥ Í≤ΩÌóòÏù¥ ÏãúÏûëÎê©ÎãàÎã§</p>
              
              <!-- Ï§ëÏöîÌïú Ï†ïÎ≥¥Î•º Î®ºÏ†Ä Î∞∞Ïπò -->
              <div class="reward-box">
                <div class="reward-amount">3,900Ïõê ~ 15,000Ïõê</div>
                <div class="reward-desc">
                  Ìïú Î≤àÏùò ÌÖåÏä§Ìä∏ Ï∞∏Ïó¨Î°ú Î∞õÏùÑ Ïàò ÏûàÎäî Î¶¨ÏõåÎìúÏûÖÎãàÎã§.<br>
                  ÌÖåÏä§Ìä∏ ÏôÑÎ£åÏôÄ ÎèôÏãúÏóê Î≥¥ÏÉÅÏù¥ ÏßÄÍ∏âÎêòÏñ¥, Ïó¨Îü¨Î∂ÑÏùò ÏÜåÏ§ëÌïú ÏãúÍ∞ÑÏóê ÎåÄÌïú Ìï©Î¶¨Ï†ÅÏù∏ ÎåÄÍ∞ÄÎ•º Î∞õÏúºÏÑ∏Ïöî.
                </div>
              </div>
              
              <div class="section">
                <p class="section-content">
                  Pylot ÌååÏùºÎüøÏúºÎ°ú Îì±Î°ùÌï¥Ï£ºÏÖîÏÑú ÏßÑÏã¨ÏúºÎ°ú Í∞êÏÇ¨Ìï©ÎãàÎã§.<br>
                  ÌòÅÏã†Ï†ÅÏù∏ Ï†úÌíàÍ≥º ÏÑúÎπÑÏä§Ïùò Ï≤´ Î≤àÏß∏ ÏÇ¨Ïö©ÏûêÍ∞Ä ÎêòÏñ¥Ï£ºÏÑ∏Ïöî.
                </p>
              </div>
              
                              <div class="section">
                  <div class="section-header">
                    <h2 class="section-title">Îì±Î°ù Ï†ïÎ≥¥</h2>
                  </div>
                  <div class="user-info-simple">
                    ${genderText} ¬∑ ${age}ÏÑ∏ ¬∑ ${occupationLabels[occupation] || occupation}
                  </div>
                </div>
              
              <div class="section">
                <h2 class="section-title">ÌååÏùºÎüø ÌôúÎèô ÌîÑÎ°úÏÑ∏Ïä§</h2>
                <ol class="process-list">
                  <li class="process-item">
                    <div class="process-number">1</div>
                    <div class="process-content">
                      <div class="process-title">ÌÖåÏä§Ìä∏ Îß§Ïπ≠</div>
                      <div class="process-desc">Í∑ÄÌïòÏùò ÌîÑÎ°úÌïÑÏóê ÏµúÏ†ÅÌôîÎêú ÌÖåÏä§Ìä∏ Í∏∞ÌöåÎ•º Ïù¥Î©îÏùºÎ°ú ÏïåÎ†§ÎìúÎ¶ΩÎãàÎã§</div>
                    </div>
                  </li>
                  <li class="process-item">
                    <div class="process-number">2</div>
                    <div class="process-content">
                      <div class="process-title">Ï∞∏Ïó¨ Ïã†Ï≤≠</div>
                      <div class="process-desc">Í¥ÄÏã¨ ÏûàÎäî ÌÖåÏä§Ìä∏Ïóê Í∞ÑÌé∏ÌïòÍ≤å Ï∞∏Ïó¨ Ïã†Ï≤≠ÌïòÏÑ∏Ïöî</div>
                    </div>
                  </li>
                  <li class="process-item">
                    <div class="process-number">3</div>
                    <div class="process-content">
                      <div class="process-title">ÌÖåÏä§Ìä∏ ÏàòÌñâ</div>
                      <div class="process-desc">ÌèâÍ∑† 15Î∂Ñ ÎÇ¥Ïô∏Ïùò ÏßÅÍ¥ÄÏ†ÅÏù¥Í≥† Ïû¨ÎØ∏ÏûàÎäî ÌÖåÏä§Ìä∏Î•º ÏßÑÌñâÌï©ÎãàÎã§</div>
                    </div>
                  </li>
                  <li class="process-item">
                    <div class="process-number">4</div>
                    <div class="process-content">
                      <div class="process-title">Ï¶âÏãú Î≥¥ÏÉÅ</div>
                      <div class="process-desc">ÌÖåÏä§Ìä∏ ÏôÑÎ£å Ï¶âÏãú ÏïΩÏÜçÎêú Î¶¨ÏõåÎìúÎ•º Î∞õÏúºÏÑ∏Ïöî</div>
                    </div>
                  </li>
                </ol>
              </div>
              
              <div class="cta-section">
                <p class="cta-text">
                  Í∂ÅÍ∏àÌïú Ï†êÏù¥ ÏûàÏúºÏãúÍ±∞ÎÇò ÎèÑÏõÄÏù¥ ÌïÑÏöîÌïòÏãúÎ©¥ Ïñ∏Ï†úÎì† Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî.<br>
                  PylotÍ≥º Ìï®Íªò ÌòÅÏã†Ïùò ÏµúÏ†ÑÏÑ†ÏóêÏÑú ÌôúÎèôÌï¥Ï£ºÏÖîÏÑú Í∞êÏÇ¨Ìï©ÎãàÎã§.
                </p>
                <a href="https://www.testpylot.com" class="cta-button">Pylot ÌôàÌéòÏù¥ÏßÄ Î∞©Î¨∏ÌïòÍ∏∞</a>
              </div>
            </div>
            
            <div class="footer">
              <p>Ïù¥ Ïù¥Î©îÏùºÏùÄ Pylot ÌååÏùºÎüø Îì±Î°ù ÌôïÏù∏ÏùÑ ÏúÑÌï¥ ÏûêÎèôÏúºÎ°ú Î∞úÏÜ°ÎêòÏóàÏäµÎãàÎã§.</p>
              <p>¬© 2025 Pylot. All rights reserved.</p>
              <p>Î¨∏Ïùò: <a href="mailto:teampylot@gmail.com">teampylot@gmail.com</a></p>
                </div>
                </div>
              </td>
            </tr>
          </table>
        </body>
        </html>
      `,
      attachments: [{
        filename: 'baner.webp',
        path: path.join(__dirname, 'public/icons/baner.webp'),
        cid: 'pylotBanner'
      }]
    };
};

// ÌååÏùºÎüø Îì±Î°ù API ÏóîÎìúÌè¨Ïù∏Ìä∏
app.post('/api/pilot-registration', async (req, res) => {
  try {
    const { email, gender, age, occupation } = req.body;
    
    // ÏûÖÎ†• Îç∞Ïù¥ÌÑ∞ Í≤ÄÏ¶ù
    if (!email || !gender || !age || !occupation) {
      return res.status(400).json({
        success: false,
        message: 'Î™®Îì† ÌïÑÎìúÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.'
      });
    }
    
    // Ïù¥Î©îÏùº Ïú†Ìö®ÏÑ± Í≤ÄÏÇ¨
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return res.status(400).json({
        success: false,
        message: 'Ïò¨Î∞îÎ•∏ Ïù¥Î©îÏùº Ï£ºÏÜåÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.'
      });
    }
    
    // ÌôòÏòÅ Ïù¥Î©îÏùº ÏÉùÏÑ±
    const emailContent = createWelcomeEmail({ email, gender, age, occupation });
    
    // Ïù¥Î©îÏùº Î∞úÏÜ°
    if (!transporter) {
      transporter = await initializeTransporter();
    }
    const currentTransporter = await Promise.resolve(transporter);
    
    const mailOptions = {
      from: {
        name: 'Pylot Team',
        address: process.env.GMAIL_USER || 'teampylot@gmail.com'
      },
      to: email,
      ...emailContent
    };
    
    const info = await currentTransporter.sendMail(mailOptions);
    
    // ÌÖåÏä§Ìä∏ Í≥ÑÏ†ï ÏÇ¨Ïö© Ïãú ÎØ∏Î¶¨Î≥¥Í∏∞ URL Î°úÍπÖ
    if (!process.env.GMAIL_APP_PASSWORD) {
      const previewUrl = nodemailer.getTestMessageUrl(info);
      if (previewUrl) {
        console.log('‚úâÔ∏è  ÏÇ¨Ïö©Ïûê ÌôòÏòÅ Ïù¥Î©îÏùº ÎØ∏Î¶¨Î≥¥Í∏∞:', previewUrl);
      }
    } else {
      console.log('‚úÖ GmailÎ°ú ÌôòÏòÅ Ïù¥Î©îÏùº Î∞úÏÜ° ÏôÑÎ£å:', email);
    }
    
    // Í¥ÄÎ¶¨ÏûêÏóêÍ≤åÎèÑ ÏïåÎ¶º Ïù¥Î©îÏùº Î∞úÏÜ°
    const adminMailOptions = {
      from: {
        name: 'Pylot System',
        address: process.env.GMAIL_USER || 'teampylot@gmail.com'
      },
      to: process.env.GMAIL_USER || 'teampylot@gmail.com',
      subject: 'ÏÉàÎ°úÏö¥ ÌååÏùºÎüø Îì±Î°ù ÏïåÎ¶º',
      html: `
        <h2>ÏÉàÎ°úÏö¥ ÌååÏùºÎüøÏù¥ Îì±Î°ùÎêòÏóàÏäµÎãàÎã§</h2>
        <ul>
          <li><strong>Ïù¥Î©îÏùº:</strong> ${email}</li>
          <li><strong>ÏÑ±Î≥Ñ:</strong> ${gender === 'male' ? 'ÎÇ®ÏÑ±' : 'Ïó¨ÏÑ±'}</li>
          <li><strong>ÎÇòÏù¥:</strong> ${age}ÏÑ∏</li>
          <li><strong>ÏßÅÏóÖÍµ∞:</strong> ${occupation}</li>
          <li><strong>Îì±Î°ù ÏãúÍ∞Ñ:</strong> ${new Date().toLocaleString('ko-KR')}</li>
        </ul>
      `
    };
    
    const adminInfo = await currentTransporter.sendMail(adminMailOptions);
    
    // ÌÖåÏä§Ìä∏ Í≥ÑÏ†ï ÏÇ¨Ïö© Ïãú Í¥ÄÎ¶¨Ïûê Ïù¥Î©îÏùº ÎØ∏Î¶¨Î≥¥Í∏∞ URLÎèÑ Î°úÍπÖ
    if (!process.env.GMAIL_APP_PASSWORD) {
      const adminPreviewUrl = nodemailer.getTestMessageUrl(adminInfo);
      if (adminPreviewUrl) {
        console.log('üìã Í¥ÄÎ¶¨Ïûê ÏïåÎ¶º Ïù¥Î©îÏùº ÎØ∏Î¶¨Î≥¥Í∏∞:', adminPreviewUrl);
      }
    } else {
      console.log('‚úÖ GmailÎ°ú Í¥ÄÎ¶¨Ïûê ÏïåÎ¶º Ïù¥Î©îÏùº Î∞úÏÜ° ÏôÑÎ£å');
    }
    
    // ÏÑ±Í≥µ ÏùëÎãµ
    res.json({
      success: true,
      message: 'ÌååÏùºÎüø Îì±Î°ùÏù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§. ÌôòÏòÅ Ïù¥Î©îÏùºÏùÑ ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî.'
    });
    
  } catch (error) {
    console.error('ÌååÏùºÎüø Îì±Î°ù Ïò§Î•ò:', error);
    res.status(500).json({
      success: false,
      message: 'ÏÑúÎ≤Ñ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Ïû†Ïãú ÌõÑ Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.'
    });
  }
});

// Ìó¨Ïä§ Ï≤¥ÌÅ¨ ÏóîÎìúÌè¨Ïù∏Ìä∏
app.get('/api/health', (req, res) => {
  res.json({ status: 'OK', timestamp: new Date().toISOString() });
});

// API ÏÑúÎ≤Ñ Ï†ÑÏö© - ÌîÑÎ°†Ìä∏ÏóîÎìúÎäî VercelÏóêÏÑú Î≥ÑÎèÑ Î∞∞Ìè¨Îê®
app.get('*', (req, res) => {
  res.status(404).json({ 
    error: 'API ÏóîÎìúÌè¨Ïù∏Ìä∏Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§',
    message: 'ÌîÑÎ°†Ìä∏ÏóîÎìúÎäî VercelÏóêÏÑú Î≥ÑÎèÑ Î∞∞Ìè¨Îê©ÎãàÎã§'
  });
});

app.listen(PORT, async () => {
  console.log(`üöÄ ÏÑúÎ≤ÑÍ∞Ä Ìè¨Ìä∏ ${PORT}ÏóêÏÑú Ïã§Ìñâ Ï§ëÏûÖÎãàÎã§`);
  console.log(`üìß Ïù¥Î©îÏùº ÏÑúÎπÑÏä§: ${process.env.GMAIL_APP_PASSWORD ? 'Gmail ÏÑ§Ï†ïÎê®' : 'ÌÖåÏä§Ìä∏ Î™®Îìú'}`);
  
  // ÏÑúÎ≤Ñ ÏãúÏûë Ïãú transporter Ï¥àÍ∏∞Ìôî
  try {
    transporter = await initializeTransporter();
    console.log('‚úÖ Ïù¥Î©îÏùº ÏÑúÎπÑÏä§ Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
  } catch (error) {
    console.error('‚ùå Ïù¥Î©îÏùº ÏÑúÎπÑÏä§ Ï¥àÍ∏∞Ìôî Ïã§Ìå®:', error.message);
  }
});
